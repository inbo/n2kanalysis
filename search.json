[{"path":"https://inbo.github.io/n2kanalysis/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behaviour participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behaviour may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":[]},{"path":"https://inbo.github.io/n2kanalysis/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"CONTRIBUTING","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. E.g. edit roxygen2 comment .R file R/, .Rd file man/.","code":""},{"path":"https://inbo.github.io/n2kanalysis/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"CONTRIBUTING","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reproducible example.","code":""},{"path":"https://inbo.github.io/n2kanalysis/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"CONTRIBUTING","text":"recommend create Git branch pull request (PR). Look GitHub Actions build status making changes. README contain badges continuous integration services used package. require tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://inbo.github.io/n2kanalysis/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"CONTRIBUTING","text":"Please note project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://inbo.github.io/n2kanalysis/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":"https://inbo.github.io/n2kanalysis/CONTRIBUTING.html","id":"thanks-for-contributing","dir":"","previous_headings":"","what":"Thanks for contributing!","title":"CONTRIBUTING","text":"contributing guide adapted tidyverse contributing guide available https://raw.githubusercontent.com/r-lib/usethis/master/inst/templates/tidy-contributing.md","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU GENERAL PUBLIC LICENSE","title":"GNU GENERAL PUBLIC LICENSE","text":"Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU GENERAL PUBLIC LICENSE","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU GENERAL PUBLIC LICENSE","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU GENERAL PUBLIC LICENSE","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU GENERAL PUBLIC LICENSE","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU GENERAL PUBLIC LICENSE","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU GENERAL PUBLIC LICENSE","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU GENERAL PUBLIC LICENSE","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU GENERAL PUBLIC LICENSE","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU GENERAL PUBLIC LICENSE","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU GENERAL PUBLIC LICENSE","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU GENERAL PUBLIC LICENSE","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License.","title":"GNU GENERAL PUBLIC LICENSE","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU GENERAL PUBLIC LICENSE","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU GENERAL PUBLIC LICENSE","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU GENERAL PUBLIC LICENSE","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU GENERAL PUBLIC LICENSE","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://inbo.github.io/n2kanalysis/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU GENERAL PUBLIC LICENSE","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands `show w’ `show c’ show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see https://www.gnu.org/licenses/. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read https://www.gnu.org/licenses/--lgpl.html.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author>     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c' for details."},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"concept","dir":"Articles","previous_headings":"","what":"Concept","title":"Using `n2kanalysis` to analyse monitoring data","text":"developed n2kanalysis analyse data species monitoring schemes. first requirement make analysis reproducible, traceable auditable. someone challenge results analysis, must able demonstrate analysis run data. second requirement make analysis portable. Portable sense can move analyses machines run . feature relevant lot analyses take lot time. third requirement make efficient possible. run new analyses. Don’t rerun existing analyses. Note change data metadata results new analysis. n2kanalysis package defines framework analysis. recommend define actual analysis dedicated package per monitoring scheme. Two examples watervogelanalysis::prepare_analysis() abvanalysis::prepare_analysis().","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Using `n2kanalysis` to analyse monitoring data","text":"general workflow within n2kanalysis follows. Import relevant data source. Generate analysis objects imported data. Fit analysis objects. Extract results analysis objects.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"import-the-relevant-data","dir":"Articles","previous_headings":"Workflow","what":"Import the relevant data","title":"Using `n2kanalysis` to analyse monitoring data","text":"Often source data control data analyst. Hence data can change source analysis. Therefore strongly recommend import relevant data source store “analysis database”. Use database analysing data. offers stable starting point analysis. case source changes, need update import script. analysis database kind version control.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"generate-the-analysis-objects","dir":"Articles","previous_headings":"Workflow","what":"Generate the analysis objects","title":"Using `n2kanalysis` to analyse monitoring data","text":"n2kModel generic S4 class contains required information fit model. machine create object needs access analysis database. machine fit model objects needs access object . Splitting multiple analyses different machines trivial.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"fit-the-models","dir":"Articles","previous_headings":"Workflow","what":"Fit the models","title":"Using `n2kanalysis` to analyse monitoring data","text":"basic option fit n2kModel object memory. better option fit location stored object. fit_model() update stored object, making available archiving. case need fit several interdependent objects, can specify objects n2kManifest object. object lists n2kModel objects fit order want fit . order matters n2kModel object depends output different n2kModel object.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"extract-the-results","dir":"Articles","previous_headings":"Workflow","what":"Extract the results","title":"Using `n2kanalysis` to analyse monitoring data","text":"fitted n2kModel contains model. Hence user can extract required information. n2kanalysis offers get_result() function return relevant parameters n2kResult object. n2kResult object contains parameters metadata. can combine multiple n2kResult objects combine_result() single n2kResult object still distinguish output different analyses. get_result() also return potential anomalies n2k_inla() models.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"traceable-and-auditable","dir":"Articles","previous_headings":"","what":"Traceable and auditable","title":"Using `n2kanalysis` to analyse monitoring data","text":"Every n2kModel object -called file fingerprint status fingerprint. file fingerprint SHA-1 hash based everything remain stable lifetime object. Think data, model type, model formula, species group, … Creating object generates hash based information time creation. check validity file fingerprint fitting model retrieving results. can use validObject() validation manually. probability two n2kModel objects different stable information get file fingerprint small. Therefore can reference n2kModel object file fingerprint use filename. can retrieve hash get_file_fingerprint(). status fingerprint based file fingerprint everything can change lifetime object. obvious element model. can retrieve hash get_status_fingerprint(). Reporting file fingerprint status fingerprint along side results uniquely identifies specific version n2kModel object.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"portable","dir":"Articles","previous_headings":"","what":"Portable","title":"Using `n2kanalysis` to analyse monitoring data","text":"n2kModel object contains required information fit model. exception case object needs information one parent objects. must provide access objects well. Use store_model() store objects. base argument either path directory file system S3 bucket. project argument defines sub directory root base. Moving analyses different file system simple copying everything project folder file system. S3 buckets need provide machine access S3 bucket, need copy files manually. fit_model() read object S3 bucket, fit model update object S3 bucket.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"efficient","dir":"Articles","previous_headings":"","what":"Efficient","title":"Using `n2kanalysis` to analyse monitoring data","text":"mentioned generating object generates file fingerprint depends stable element. Use store_model(overwrite = FALSE) generate objects. nothing changed, file fingerprint doesn’t change keep existing object might fit earlier. Suppose need change definition child objects. alter file fingerprint thus generate new objects. However parent objects remain . Every object status. default fit_model() handles object status “new” “waiting”. “new”: object ready fitting. required, object parent object available child object. fit_model() fits object. “waiting”: object missing information least one parent object. fit_model() updates information parent objects updates status accordingly. “converged”: fit_model() successfully fitted object. “error”: Something wrong fitting model. one parents status “error”. Refitting objects status “error” “converged” makes sense upgrade n2kanalysis.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"metadata","dir":"Articles","previous_headings":"","what":"Metadata","title":"Using `n2kanalysis` to analyse monitoring data","text":"need transfer n2kModel object machines, important add necessary metadata object. metadata contains file status fingerprints.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"definition-of-the-model","dir":"Articles","previous_headings":"Metadata","what":"Definition of the model","title":"Using `n2kanalysis` to analyse monitoring data","text":"model type generic description model, whereas formula actual formula used specific analysis. generic model type allows group results among species location, formula still allow use different formula objects. Suppose generic model uses year month covariates. species present single month, doesn’t make sense include month covariate species. seed sets seed make analysis reproducible.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"scheme-species-and-location","dir":"Articles","previous_headings":"Metadata","what":"Scheme, species and location","title":"Using `n2kanalysis` to analyse monitoring data","text":"important information metadata scheme id, species group id location group id. scheme id refers monitoring scheme delivered data. species group id refers list species handled analysis. analyse single species, need create species group containing species. Similarly, location group id refers list locations. management species location groups outside scope n2kanalysis. recommend three tables: speciesgroup, species speciesgroup_species. speciesgroup species contain least id description field. speciesgroup_species contain least speciesgroup_id species_id field. Hence species can part one species groups. Use similar structure locationgroup, location locationgroup_location. result_datasource_id refers database store definitions scheme_id, species_group_id location_group_id.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"time-stamp","dir":"Articles","previous_headings":"Metadata","what":"Time-stamp","title":"Using `n2kanalysis` to analyse monitoring data","text":"Document available time period first_imported_year last_imported_year. duration last_analysed_year refer time span analysis. default duration difference last first imported year. default last_analysed_year last_imported_year. Use different values case analyse covers subset full dataset. Suppose full dataset spans 1992 2023. want analyse period 2011 - 2020, set duration = 10 last_analysed_year = 2020. analysis_date refers moment imported source data. can use time-stamp commit case placed data version control git. git2rdata::recent_commit() handy function find recent commit changed specific file.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"used-packages","dir":"Articles","previous_headings":"Metadata","what":"Used packages","title":"Using `n2kanalysis` to analyse monitoring data","text":"metadata contains one “analysis versions”. “analysis version” list packages including version number loading creating fitting model. Fitting object different machine different R packages one generated object result second “analysis version”. goal document software used process. Store scripts generate objects dedicated package. Load package running script. workflow documents code create objects. look abvanalysis watervogelanalysis real examples. packages contain code : 1. Import data source. 1. Create analysis objects. 1. Get results analysis objects. 1. Display results report website.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"linked-analyses","dir":"Articles","previous_headings":"Metadata","what":"Linked analyses","title":"Using `n2kanalysis` to analyse monitoring data","text":"Optionally can define one parent analyses object. Use need combine analyses different species multi-species index. want analyse trends multiple imputation. imputation model parent object. aggregated imputed data child object. analysis aggregated imputed data grandchild object.","code":""},{"path":[]},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"n2k_import","dir":"Articles","previous_headings":"Available models","what":"n2k_import()","title":"Using `n2kanalysis` to analyse monitoring data","text":"dummy model document import step. object allows use parent object subsequent models.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"n2k_inla","dir":"Articles","previous_headings":"Available models","what":"n2k_inla()","title":"Using `n2kanalysis` to analyse monitoring data","text":"Fits models integrated nested Laplacian approximation (INLA). Setting imputation_size larger 0 (default) performs multiple imputation missing values using multimput::impute(). case multiple imputation can define minimum covariate. covariate hold minimal value impute. Use case incomplete samples. example count number birds location sampled part location. observed count thus lower bound true value. Set response variable missing minimum variable observed count. Another option specify extra dataset observations. intended option rare observations might distort imputation model. instance due observation events location, non-zero observations location extremely high observations location. Exclude observations location imputation model add extra. won’t get imputations missing observation extra. use observed numbers extra subsequent aggregation.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"n2k_inla_comparison","dir":"Articles","previous_headings":"Available models","what":"n2k_inla_comparison()","title":"Using `n2kanalysis` to analyse monitoring data","text":"Compares multiple n2k_inla() objects based Wantanabe Akaike Information Criterion (WAIC).","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"n2k_composite","dir":"Articles","previous_headings":"Available models","what":"n2k_composite()","title":"Using `n2kanalysis` to analyse monitoring data","text":"Combines several n2kModel objects single analysis. example combine results individual species composite species index. extractor function extract mean variance parameters. mean fitted object mean means every parameters models. standard error square root average variance every parameter models. Hence assume independence parameters models.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"n2k_hurdle_imputed","dir":"Articles","previous_headings":"Available models","what":"n2k_hurdle_imputed()","title":"Using `n2kanalysis` to analyse monitoring data","text":"Combines two n2k_inla() objects multiple imputation. presence model n2k_inla() binomial model describes presence species. count model n2k_inla() zero-truncated Poisson zero-truncated negative binomial model describes non-zero counts species. INLA provides type 0 type 1 zero-inflated models. type 0 model defines likelihood point mass 0 zero-truncated distribution. Prob(y)=p×1[y=0]+(1−p)×𝒫(𝓎|𝓎>0)Prob(y) = p × 1_{[y=0]} + (1 − p) × \\mathcal{P(y | y > 0)} type 1 model defines likelihood combination point zero distribution can produce zero values . Prob(y)=p×1[y=0]+(1−p)×𝒫(𝓎)Prob(y) = p × 1_{[y=0]} + (1 − p) × \\mathcal{P(y)} trick get zero-truncated distribution use type 0 zero-inflated distribution fix probability point mass zero small value. required INLA setting. Note value expressed log scale. -11 log scale equivalent p=0.0000167p = 0.0000167.","code":"control.family = list(   list(hyper = list(theta2 = list(initial = -11, fixed = TRUE))) )"},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"n2k_aggregate","dir":"Articles","previous_headings":"Available models","what":"n2k_aggregate()","title":"Using `n2kanalysis` to analyse monitoring data","text":"aggregation step multiple imputation. fit_model() call multimpute::aggregate_impute(). Use join argument select subset locations. example ran imputation model country level want aggregate region within country. Note can use impute model different aggregation, example one imputation model country level aggregations multiple regions.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"n2k_modelimputed","dir":"Articles","previous_headings":"Available models","what":"n2k_modelimputed()","title":"Using `n2kanalysis` to analyse monitoring data","text":"Fitting model (aggregated) imputed dataset. fit_model() call multimpute::model_impute(). can use filter subset data imputation. useful feature modelling aggregation smaller subset might result leading zero’s dataset. can provide custom filter function remove observations dataset. function handles empty datasets applying filter.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"manifest","dir":"Articles","previous_headings":"","what":"Manifest","title":"Using `n2kanalysis` to analyse monitoring data","text":"basic way fit models loop files. suboptimal models depend models. Since file name equals file fingerprint, order file names link optimal order fit models. solved problem introducing n2k_manifest() object. manifest simply dataframe file fingerprint model file fingerprint parent model. information available generating models. Hence can generate n2kModel objects store link objects manifest. need multiple parent objects, add one row every parent. Applying fit_model() n2k_manifest() fit models optimal order. initial list model consist models without parents. handles children initial models. grandchildren . order guarantees parent models fitted fitting model. Another relevant use manifest bundles set models. example models given monitoring scheme specific year. manifest file fingerprint, useful reference specific manifest.","code":""},{"path":"https://inbo.github.io/n2kanalysis/articles/workflow.html","id":"docker","dir":"Articles","previous_headings":"","what":"Docker","title":"Using `n2kanalysis` to analyse monitoring data","text":"n2kanalysis allows maximise reproducibility making easier run analysis Docker container. Use store_manifest_yaml() store manifest specify Docker image plus optional extra dependencies install. manifest_yaml_to_bash() creates bash script fits models one one specified Docker container. Using Docker improves portability analysis well. stored object S3 bucket, need copy script machine run . copy script objects case store everything file system. manifest_yaml_to_bash() offers option shut machine end script. avoids cost running idle server. can also split analysis multiple machines. fancy parallel computing involved. Suppose specified split = 2. simply get two scripts, one “odd” analyses one “even” analysis.","code":""},{"path":"https://inbo.github.io/n2kanalysis/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thierry Onkelinx. Author, maintainer.            Research Institute Nature Forest (INBO) . Copyright holder, funder.","code":""},{"path":"https://inbo.github.io/n2kanalysis/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Onkelinx, Thierry (2025) n2kanalysis: Generic Functions Analyse Data 'Natura 2000' Monitoring. Version 0.4.0. https://inbo.github.io/n2kanalysis/","code":"@Manual{,   title = {n2kanalysis: Generic Functions to Analyse Data from the 'Natura 2000' Monitoring. Version 0.4.0},   author = {Thierry Onkelinx},   year = {2025},   url = {https://inbo.github.io/n2kanalysis/},   abstract = {All generic functions and classes for the analysis for the 'Natura 2000' monitoring. The classes contain all required data and definitions to fit the model without the need to access other sources. Potentially they might need access to one or more parent objects. An aggregation object might for example need the result of an imputation object. The actual definition of the analysis, using these generic function and classes, is defined in dedictated analysis R packages for every monitoring scheme. For example 'abvanalysis' and 'watervogelanalysis'.},   keywords = {analysis, reproducible research, natura 2000, monitoring},   doi = {10.5281/zenodo.3576047}, }"},{"path":"https://inbo.github.io/n2kanalysis/index.html","id":"the-n2kanalysis-package","dir":"","previous_headings":"","what":"Generic Functions to Analyse Data from the Natura 2000 Monitoring","title":"Generic Functions to Analyse Data from the Natura 2000 Monitoring","text":"n2kanalysis package contains main infrastructure analysis Natura 2000 Monitoring. import raw data analysis object done dedicated packages, one monitoring scheme.","code":""},{"path":"https://inbo.github.io/n2kanalysis/index.html","id":"rationale","dir":"","previous_headings":"","what":"Rationale","title":"Generic Functions to Analyse Data from the Natura 2000 Monitoring","text":"n2kanalysis part collection R packages created analyse data gathered Natura 2000 monitoring. n2kanalysis: R package generic functions analysis watervogelanalysis: R package extract raw data wintering bird survey database prepare analyses abvanalysis: R package extract raw data common breeding birds survey database prepare analyses n2khelper: auxiliary functions used packages n2kresult: Liquibase scripts set-database results analyses stored n2kupdate: R package read write n2kresult database Rn2k: Docker image required dependencies run analyses main goal n2kanalysis assist traceable analysis monitoring data. S4 classes n2kanalysis allow defines self-contained analysis objects. Besides required data definition model, object also contains relevant meta-data. object contains two fingerprints: file fingerprint status fingerprint. SHA-1 hashes based current object. file fingerprint based parts object won’t change analysis. E.g. meta-data, data definition model. status fingerprint based file fingerprint relevant part object change fitting process. Publishing fingerprints along results ensures easy matching results object originated.","code":""},{"path":"https://inbo.github.io/n2kanalysis/index.html","id":"folder-structure","dir":"","previous_headings":"","what":"Folder structure","title":"Generic Functions to Analyse Data from the Natura 2000 Monitoring","text":"folder structure typical R package mandatory R folder (definition functions) man (help files Rd format). inst optional folder auxiliary scripts stored. optional tests folder contains unit tests using infrastructure testthat package.","code":"n2kanalysis |-- inst |-- man |-- R |-- tests    |-- testthat"},{"path":"https://inbo.github.io/n2kanalysis/reference/Spde-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The spde class — Spde-class","title":"The spde class — Spde-class","text":"holds coordinates, range sigma parameters SPDE model.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/Spde-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The spde class — Spde-class","text":"Coordinates data.frame coordinates used mesh. Range numeric vector length 2. used prior.range argument [INLA::inla.spde2.pcmatern]. Sigma numeric vector length 2. used prior.sigma argument [INLA::inla.spde2.pcmatern].","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple n2k objects — combine","title":"Combine multiple n2k objects — combine","text":"Combine multiple n2k objects","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple n2k objects — combine","text":"","code":"combine(...)  # S4 method for class 'n2kAnalysisVersion' combine(...)  # S4 method for class 'n2kParameter' combine(...)  # S4 method for class 'n2kAnomaly' combine(...)  # S4 method for class 'n2kResult' combine(...)"},{"path":"https://inbo.github.io/n2kanalysis/reference/combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple n2k objects — combine","text":"... n2k objects","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/delete_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete an n2kModel object — delete_model","title":"Delete an n2kModel object — delete_model","text":"Delete n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/delete_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete an n2kModel object — delete_model","text":"","code":"delete_model(x, base, project)  # S4 method for class 'ANY,character' delete_model(x, base, project)  # S4 method for class 'ANY,s3_bucket' delete_model(x, base, project)"},{"path":"https://inbo.github.io/n2kanalysis/reference/delete_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete an n2kModel object — delete_model","text":"x file fingerprint n2kModel base base location project relative path within base location","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/display.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a message. — display","title":"Display a message. — display","text":"short cut (verbose) message(x).","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/display.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a message. — display","text":"","code":"display(verbose, message, linefeed = TRUE)"},{"path":"https://inbo.github.io/n2kanalysis/reference/display.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a message. — display","text":"verbose logical. TRUE print message. FALSE nothing. message vector passed message(). linefeed logical. TRUE append newline character end message.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the relevant coefficients — extract","title":"Extract the relevant coefficients — extract","text":"Extract relevant coefficients","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the relevant coefficients — extract","text":"","code":"extract(extractor, object, base, project)  # S4 method for class 'ANY,character' extract(extractor, object, base, project)  # S4 method for class 'ANY,n2kInla' extract(extractor, object, base = NULL, project = NULL)  # S4 method for class 'ANY,n2kModelImputed' extract(extractor, object, base = NULL, project = NULL)"},{"path":"https://inbo.github.io/n2kanalysis/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the relevant coefficients — extract","text":"extractor extractor function object n2kModel object base optional base location object project optional subdirectory","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the relevant coefficients — extract","text":"relevant coefficients","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/fit_every_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the model to the analysis files — fit_every_model","title":"Fit the model to the analysis files — fit_every_model","text":"Fit model analysis files","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/fit_every_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the model to the analysis files — fit_every_model","text":"","code":"fit_every_model(path, status, verbose = TRUE, n_cluster = 1, ...)"},{"path":"https://inbo.github.io/n2kanalysis/reference/fit_every_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the model to the analysis files — fit_every_model","text":"path path containing analysis files. status vector status levels (re-)fit model. Defaults c(\"new\", \"waiting\") missing. verbose Show name current analysis file screen. Defaults TRUE n_cluster number clusters use. ... Arguments passed fit_model()","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/fit_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an n2kModel object — fit_model","title":"Fit an n2kModel object — fit_model","text":"Fit n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/fit_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an n2kModel object — fit_model","text":"","code":"fit_model(x, ...)  # S4 method for class 'character' fit_model(   x,   base,   project,   status = c(\"new\", \"waiting\"),   verbose = TRUE,   ...,   bucket )  # S4 method for class 'n2kAggregate' fit_model(x, ...)  # S4 method for class 'n2kComposite' fit_model(x, base, project, status = \"new\", ...)  # S4 method for class 'n2kHurdleImputed' fit_model(x, base, project, status = c(\"new\", \"waiting\"), ...)  # S4 method for class 'n2kInla' fit_model(   x,   status = \"new\",   ...,   timeout = NULL,   seed = get_seed(x),   num_threads = NULL,   parallel_configs = TRUE )  # S4 method for class 'n2kInlaComparison' fit_model(x, base, project, status = \"new\", verbose = TRUE, ...)  # S4 method for class 'n2kManifest' fit_model(   x,   base,   project,   status = c(\"new\", \"waiting\"),   verbose = TRUE,   ...,   local = NULL )  # S4 method for class 'n2kModelImputed' fit_model(x, ...)  # S4 method for class 'n2kSpde' fit_model(   x,   status = \"new\",   ...,   timeout = NULL,   seed = get_seed(x),   num_threads = NULL,   parallel_configs = TRUE )  # S4 method for class 's3_object' fit_model(x, status = c(\"new\", \"waiting\"), ...)"},{"path":"https://inbo.github.io/n2kanalysis/reference/fit_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an n2kModel object — fit_model","text":"x n2kModel ... arguments. See details base root project. Can either directory file system AWS S3 bucket object. Extracted bucket x missing. project subdirectory project. relative base. Extracted x missing. status vector status levels naming levels calculated. Defaults \"new\". verbose logical indicating function display name file status. Defaults TRUE. bucket name AWS S3 bucket. used base missing. timeout optional number second model time seed See argument INLA::inla.qsample() information. order produce reproducible results, ALSO need make sure RNG R state, see example INLA::inla.posterior.sample(). seed non-zero, num_threads forced \"1:1\" parallel_configs set FALSE, since parallel sampling produce reproducible sequence pseudo-random numbers. num_threads number threads use format \":B\" defining number threads outer () inner (B) layer nested parallelism. \"0\" replaced intelligently. seed != 0 requires serial computations. parallel_configs Logical. TRUE Windows, try run configuration parallel (Windows) using threads (see num_threads), using B:0 threads. local local folder objects AWS S3 bucket downloaded.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/fit_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit an n2kModel object — fit_model","text":"status: vector status levels naming levels recalculated. Defaults c(\"new\", \"waiting\"). verbose: logical indicating function display name file status. Defaults TRUE.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_analysis_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the analysis date of an n2kModel object — get_analysis_date","title":"Get the analysis date of an n2kModel object — get_analysis_date","text":"Get analysis date n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_analysis_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the analysis date of an n2kModel object — get_analysis_date","text":"","code":"get_analysis_date(x)  # S4 method for class 'n2kAnalysisMetadata' get_analysis_date(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_analysis_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the analysis date of an n2kModel object — get_analysis_date","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_analysis_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the analysis date of an n2kModel object — get_analysis_date","text":"analysis date object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_analysis_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an analysis version — get_analysis_version","title":"Get an analysis version — get_analysis_version","text":"Get analysis version","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_analysis_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an analysis version — get_analysis_version","text":"","code":"get_analysis_version(version)  # S4 method for class 'data.frame' get_analysis_version(version)  # S4 method for class 'n2kAnalysisMetadata' get_analysis_version(version)  # S4 method for class 'sessionInfo' get_analysis_version(version)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_analysis_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an analysis version — get_analysis_version","text":"version object extract version","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_anomaly.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the anomalies from a model — get_anomaly","title":"Get the anomalies from a model — get_anomaly","text":"Get anomalies model","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_anomaly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the anomalies from a model — get_anomaly","text":"","code":"get_anomaly(analysis, ...)  # S4 method for class 'n2kInla' get_anomaly(   analysis,   n = 20,   expected_ratio = 5,   expected_absent = 5,   random_threshold = 1.05,   verbose = TRUE,   ... )  # S4 method for class 'n2kModel' get_anomaly(analysis, verbose = TRUE, ...)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_anomaly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the anomalies from a model — get_anomaly","text":"analysis model add ... Extra options. See details. n number anomalies per category. expected_ratio Observations observed / fitted > expected_ratio fitted / observed > expected_ratio potential anomalies. Defaults 5, implies observed values 5 times higher lower fitted values potential anomalies. expected_absent Zero observations fitted > expected_absent potential anomalies. random_threshold minimal relative effect size random effect. Random effect smaller effect size never anomaly. Defaults 1.05 (5%). verbose Print extra information screen","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the data of an n2kModel object — get_data","title":"Get the data of an n2kModel object — get_data","text":"Get data n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the data of an n2kModel object — get_data","text":"","code":"get_data(x)  # S4 method for class 'n2kInla' get_data(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the data of an n2kModel object — get_data","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the data of an n2kModel object — get_data","text":"data object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_datafield_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the data field id — get_datafield_id","title":"Get the data field id — get_datafield_id","text":"Get data field id","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_datafield_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the data field id — get_datafield_id","text":"","code":"get_datafield_id(table, field, datasource, root, stage = FALSE)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_datafield_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the data field id — get_datafield_id","text":"table table name field field name datasource data source name root root project. Can file path git-repository. Defaults current working directory (\".\"). stage Logical value indicating whether stage changes writing data. Defaults FALSE.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_file_fingerprint.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the file fingerprint of an n2kModel object — get_file_fingerprint","title":"Get the file fingerprint of an n2kModel object — get_file_fingerprint","text":"Get file fingerprint n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_file_fingerprint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the file fingerprint of an n2kModel object — get_file_fingerprint","text":"","code":"get_file_fingerprint(x)  # S4 method for class 'n2kAnalysisMetadata' get_file_fingerprint(x)  # S4 method for class 'n2kManifest' get_file_fingerprint(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_file_fingerprint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the file fingerprint of an n2kModel object — get_file_fingerprint","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_file_fingerprint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the file fingerprint of an n2kModel object — get_file_fingerprint","text":"file fingerprint object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the formula of an n2kModel object — get_formula","title":"Get the formula of an n2kModel object — get_formula","text":"Get formula n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the formula of an n2kModel object — get_formula","text":"","code":"get_formula(x)  # S4 method for class 'n2kAnalysisMetadata' get_formula(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the formula of an n2kModel object — get_formula","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the formula of an n2kModel object — get_formula","text":"formula object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_location_group_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the location group id of an n2kModel object — get_location_group_id","title":"Get the location group id of an n2kModel object — get_location_group_id","text":"Get location group id n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_location_group_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the location group id of an n2kModel object — get_location_group_id","text":"","code":"get_location_group_id(x)  # S4 method for class 'n2kAnalysisMetadata' get_location_group_id(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_location_group_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the location group id of an n2kModel object — get_location_group_id","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_location_group_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the location group id of an n2kModel object — get_location_group_id","text":"location group id object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the model of a n2kModel object — get_model","title":"Get the model of a n2kModel object — get_model","text":"Get model n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the model of a n2kModel object — get_model","text":"","code":"get_model(x)  # S4 method for class 'n2kInla' get_model(x)  # S4 method for class 'character' get_model(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the model of a n2kModel object — get_model","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the model of a n2kModel object — get_model","text":"model object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_model_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the model parameters from a model — get_model_parameter","title":"Add the model parameters from a model — get_model_parameter","text":"Add model parameters model","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_model_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the model parameters from a model — get_model_parameter","text":"","code":"get_model_parameter(analysis, ...)  # S4 method for class 'n2kAggregate' get_model_parameter(analysis, ...)  # S4 method for class 'n2kComposite' get_model_parameter(analysis, ...)  # S4 method for class 'n2kHurdleImputed' get_model_parameter(analysis, ...)  # S4 method for class 'n2kInla' get_model_parameter(analysis, verbose = TRUE, ...)  # S4 method for class 'n2kInlaComparison' get_model_parameter(analysis, ...)  # S4 method for class 'n2kModelImputed' get_model_parameter(analysis, ...)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_model_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the model parameters from a model — get_model_parameter","text":"analysis model add. ... extra options verbose Print extra information screen","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the model type of an n2kModel object — get_model_type","title":"Get the model type of an n2kModel object — get_model_type","text":"Get model type n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the model type of an n2kModel object — get_model_type","text":"","code":"get_model_type(x)  # S4 method for class 'n2kAnalysisMetadata' get_model_type(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the model type of an n2kModel object — get_model_type","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the model type of an n2kModel object — get_model_type","text":"model type object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_parents.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the object of the parent analyses of an n2kModel object — get_parents","title":"Get the object of the parent analyses of an n2kModel object — get_parents","text":"Get object parent analyses n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_parents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the object of the parent analyses of an n2kModel object — get_parents","text":"","code":"get_parents(child, base, project)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_parents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the object of the parent analyses of an n2kModel object — get_parents","text":"child child object base base location read model project relative path within base location","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the results from an analysis — get_result","title":"Add the results from an analysis — get_result","text":"Add results analysis","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the results from an analysis — get_result","text":"","code":"get_result(x, ...)  # S4 method for class 'character' get_result(x, n_cluster = 1, verbose = TRUE, ...)  # S4 method for class 'n2kInla' get_result(x, verbose = TRUE, ...)  # S4 method for class 'n2kModel' get_result(x, verbose = TRUE, ...)  # S4 method for class 'n2kManifest' get_result(x, ..., base, project, verbose = TRUE)  # S4 method for class 's3_object' get_result(x, ...)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the results from an analysis — get_result","text":"x object current results ... arguments (see Details) n_cluster number clusters run function parallel. Defaults 1 (= parallel computing). verbose Print extra information screen base base location read model project relative path within base location","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_scheme_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the scheme_id of an n2kModel object — get_scheme_id","title":"Get the scheme_id of an n2kModel object — get_scheme_id","text":"Get scheme_id n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_scheme_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the scheme_id of an n2kModel object — get_scheme_id","text":"","code":"get_scheme_id(x)  # S4 method for class 'n2kAnalysisMetadata' get_scheme_id(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_scheme_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the scheme_id of an n2kModel object — get_scheme_id","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_scheme_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the scheme_id of an n2kModel object — get_scheme_id","text":"scheme_id object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the seed of an n2kModel object — get_seed","title":"Get the seed of an n2kModel object — get_seed","text":"Get seed n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the seed of an n2kModel object — get_seed","text":"","code":"get_seed(x)  # S4 method for class 'n2kAnalysisMetadata' get_seed(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the seed of an n2kModel object — get_seed","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_seed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the seed of an n2kModel object — get_seed","text":"seed object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_species_group_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the species group id of an n2kModel object — get_species_group_id","title":"Get the species group id of an n2kModel object — get_species_group_id","text":"Get species group id n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_species_group_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the species group id of an n2kModel object — get_species_group_id","text":"","code":"get_species_group_id(x)  # S4 method for class 'n2kAnalysisMetadata' get_species_group_id(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_species_group_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the species group id of an n2kModel object — get_species_group_id","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_species_group_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the species group id of an n2kModel object — get_species_group_id","text":"species group id object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_status_fingerprint.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the status fingerprint of an n2kModel object — get_status_fingerprint","title":"Get the status fingerprint of an n2kModel object — get_status_fingerprint","text":"Get status fingerprint n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_status_fingerprint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the status fingerprint of an n2kModel object — get_status_fingerprint","text":"","code":"get_status_fingerprint(x)  # S4 method for class 'n2kAnalysisMetadata' get_status_fingerprint(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/get_status_fingerprint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the status fingerprint of an n2kModel object — get_status_fingerprint","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/get_status_fingerprint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the status fingerprint of an n2kModel object — get_status_fingerprint","text":"status fingerprint object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/inla_inverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mean and 95\\ marginal — inla_inverse","title":"Calculate the mean and 95\\ marginal — inla_inverse","text":"useful calculating variance random effect marginal gives precision random effect.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/inla_inverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mean and 95\\ marginal — inla_inverse","text":"","code":"inla_inverse(marginal)"},{"path":"https://inbo.github.io/n2kanalysis/reference/inla_inverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mean and 95\\ marginal — inla_inverse","text":"marginal INLA marginal","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/make_a.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an Spde object to a A object — make_a","title":"Convert an Spde object to a A object — make_a","text":"Convert Spde object object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/make_a.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an Spde object to a A object — make_a","text":"","code":"make_a(object, data)  # S4 method for class 'Spde' make_a(object, data)"},{"path":"https://inbo.github.io/n2kanalysis/reference/make_a.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an Spde object to a A object — make_a","text":"object Spde object data data.frame combine Spde object create matrix.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/manifest_yaml_to_bash.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a manifest yaml file into a bash script — manifest_yaml_to_bash","title":"Convert a manifest yaml file into a bash script — manifest_yaml_to_bash","text":"Convert manifest yaml file bash script","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/manifest_yaml_to_bash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a manifest yaml file into a bash script — manifest_yaml_to_bash","text":"","code":"manifest_yaml_to_bash(   base,   project,   hash,   shutdown = FALSE,   split = 1,   status = c(\"new\", \"waiting\"),   limit = FALSE,   timeout = 4 )  # S4 method for class 's3_bucket' manifest_yaml_to_bash(   base,   project,   hash,   shutdown = FALSE,   split = 1,   status = c(\"new\", \"waiting\"),   limit = FALSE,   timeout = 4 )  # S4 method for class 'character' manifest_yaml_to_bash(   base,   project,   hash,   shutdown = FALSE,   split = 1,   status = c(\"new\", \"waiting\"),   limit = FALSE,   timeout = 4 )"},{"path":"https://inbo.github.io/n2kanalysis/reference/manifest_yaml_to_bash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a manifest yaml file into a bash script — manifest_yaml_to_bash","text":"base base location store manifest project relative path within base location hash Fingerprint manifest yamlfile. shutdown Append shutdown command end script. Defaults FALSE. split Number scripts splits analyses. Default 1. status vector status levels naming levels calculated. Defaults c(\"new\", \"waiting\"). limit Limit bandwidth CPU usage. Defaults FALSE. timeout number hours time docker container. Defaults 4.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/mark_obsolete_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Find and mark obsolete datasets — mark_obsolete_dataset","title":"Find and mark obsolete datasets — mark_obsolete_dataset","text":"dataset obsolete newer version available","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/mark_obsolete_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find and mark obsolete datasets — mark_obsolete_dataset","text":"","code":"mark_obsolete_dataset(channel)"},{"path":"https://inbo.github.io/n2kanalysis/reference/mark_obsolete_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find and mark obsolete datasets — mark_obsolete_dataset","text":"channel open ODBC channel","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_average.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate moving trend coefficients — moving_average","title":"Calculate moving trend coefficients — moving_average","text":"Calculate moving trend coefficients","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_average.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate moving trend coefficients — moving_average","text":"","code":"moving_average(n_year, duration, first_year = 0)"},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_average.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate moving trend coefficients — moving_average","text":"n_year Number available years data. duration Number years moving window. number available years less value, trend calculated available years. first_year First year data. used name rows.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_average.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate moving trend coefficients — moving_average","text":"matrix moving average coefficients One row window one column year data. format row names average_{window mid point}_{window length}. average_2001.5_4 average years 2000 2003.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_average.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate moving trend coefficients — moving_average","text":"","code":"moving_average(5, 3) #>                    [,1]      [,2]      [,3]      [,4]      [,5] #> average_1.0_3 0.3333333 0.3333333 0.3333333 0.0000000 0.0000000 #> average_2.0_3 0.0000000 0.3333333 0.3333333 0.3333333 0.0000000 #> average_3.0_3 0.0000000 0.0000000 0.3333333 0.3333333 0.3333333 moving_average(5, 3, 2000) #>                       [,1]      [,2]      [,3]      [,4]      [,5] #> average_2001.0_3 0.3333333 0.3333333 0.3333333 0.0000000 0.0000000 #> average_2002.0_3 0.0000000 0.3333333 0.3333333 0.3333333 0.0000000 #> average_2003.0_3 0.0000000 0.0000000 0.3333333 0.3333333 0.3333333"},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate coefficients for a moving difference — moving_difference","title":"Calculate coefficients for a moving difference — moving_difference","text":"Calculate coefficients moving difference","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate coefficients for a moving difference — moving_difference","text":"","code":"moving_difference(n_year, duration, first_year = 1)"},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate coefficients for a moving difference — moving_difference","text":"n_year Number available years data. duration Number years moving window. number available years less value, trend calculated available years. first_year First year data. used name rows.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_difference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate coefficients for a moving difference — moving_difference","text":"matrix moving average coefficients One row window one column year data. format row names difference_{window mid point start}_{window mid point end}_{window length}. difference_2001.5_2010.5_4 difference average period years 2009 2012 compared period 2000 2003.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_difference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate coefficients for a moving difference — moving_difference","text":"","code":"moving_difference(6, 2) #>                      [,1] [,2] [,3] [,4] [,5] [,6] #> difference_1.5_5.5_2 -0.5 -0.5  0.0  0.0  0.5  0.5 #> difference_2.5_5.5_2  0.0 -0.5 -0.5  0.0  0.5  0.5 #> difference_3.5_5.5_2  0.0  0.0 -0.5 -0.5  0.5  0.5 #> difference_1.5_4.5_2 -0.5 -0.5  0.0  0.5  0.5  0.0 #> difference_2.5_4.5_2  0.0 -0.5 -0.5  0.5  0.5  0.0 #> difference_1.5_3.5_2 -0.5 -0.5  0.5  0.5  0.0  0.0 moving_difference(6, 2, 2000) #>                            [,1] [,2] [,3] [,4] [,5] [,6] #> difference_2000.5_2004.5_2 -0.5 -0.5  0.0  0.0  0.5  0.5 #> difference_2001.5_2004.5_2  0.0 -0.5 -0.5  0.0  0.5  0.5 #> difference_2002.5_2004.5_2  0.0  0.0 -0.5 -0.5  0.5  0.5 #> difference_2000.5_2003.5_2 -0.5 -0.5  0.0  0.5  0.5  0.0 #> difference_2001.5_2003.5_2  0.0 -0.5 -0.5  0.5  0.5  0.0 #> difference_2000.5_2002.5_2 -0.5 -0.5  0.5  0.5  0.0  0.0"},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate moving trend coefficients — moving_trend","title":"Calculate moving trend coefficients — moving_trend","text":"Calculate moving trend coefficients","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate moving trend coefficients — moving_trend","text":"","code":"moving_trend(n_year, duration, first_year = 0)"},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate moving trend coefficients — moving_trend","text":"n_year Number available years data. duration Number years moving window. number available years less value, trend calculated available years. first_year First year data. used name rows.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_trend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate moving trend coefficients — moving_trend","text":"matrix moving trend coefficients. One row window one column year data. format row names trend_{window mid point}_{window length}. trend_2001.5_4 trend years 2000 2003.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/moving_trend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate moving trend coefficients — moving_trend","text":"","code":"moving_trend(5, 3) #>             [,1] [,2] [,3] [,4] [,5] #> trend_1.0_3 -0.5  0.0  0.5  0.0  0.0 #> trend_2.0_3  0.0 -0.5  0.0  0.5  0.0 #> trend_3.0_3  0.0  0.0 -0.5  0.0  0.5 moving_trend(5, 4, 2000) #>                [,1] [,2] [,3] [,4] [,5] #> trend_2001.5_4 -0.3 -0.1  0.1  0.3  0.0 #> trend_2002.5_4  0.0 -0.3 -0.1  0.1  0.3"},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kAggregate-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kAggregate class — n2kAggregate-class","title":"The n2kAggregate class — n2kAggregate-class","text":"holds analysis data based aggregated imputation","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kAggregate-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The n2kAggregate class — n2kAggregate-class","text":"RawImputed rawImputed object multiple imputations. Function function apply group. Filter object pass filter argument multimput::aggregate_impute(). Join object pass join argument multimput::aggregate_impute(). AggregatedImputed aggregatedImputed object multiple imputations.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kAnalysisMetadata-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kAnalysisMetadata class — n2kAnalysisMetadata-class","title":"The n2kAnalysisMetadata class — n2kAnalysisMetadata-class","text":"n2kAnalysisMetadata class","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kAnalysisVersion-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kAnalysisVersion class — n2kAnalysisVersion-class","title":"The n2kAnalysisVersion class — n2kAnalysisVersion-class","text":"n2kAnalysisVersion class","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kAnomaly-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kAnomaly class — n2kAnomaly-class","title":"The n2kAnomaly class — n2kAnomaly-class","text":"n2kAnomaly class","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kComposite-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kComposite class — n2kComposite-class","title":"The n2kComposite class — n2kComposite-class","text":"Calculate composite indices multiple analysis","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kComposite-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The n2kComposite class — n2kComposite-class","text":"Extractor function extract relevant parameters model. Parameter data.frame relevant parameter estimates parent analysis. Index composite index based parameters.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kContrast-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kContrast class — n2kContrast-class","title":"The n2kContrast class — n2kContrast-class","text":"n2kContrast class","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kHurdleImputed-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kHurdleImputed class — n2kHurdleImputed-class","title":"The n2kHurdleImputed class — n2kHurdleImputed-class","text":"holds model2 hurdle imputed data.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kHurdleImputed-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The n2kHurdleImputed class — n2kHurdleImputed-class","text":"Presence rawImputed object presence component. Count rawImputed object count component. Hurdle aggregatedImputed object resulting hurdle object.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kImport-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kImport class — n2kImport-class","title":"The n2kImport class — n2kImport-class","text":"hold imported datasets","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kImport-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The n2kImport class — n2kImport-class","text":"Dataset data.frame datasets.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kInla-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kInla class — n2kInla-class","title":"The n2kInla class — n2kInla-class","text":"hold analysis data based INLA Poisson model","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kInla-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The n2kInla class — n2kInla-class","text":"Data data.frame data. LinearCombination optional matrix linear combinations. ReplicateName optional list names replicates. Model Either NULL resulting INLA model. Family family INLA model. Control named list options passed arguments INLA::inla(). ImputationSize number multiple imputations. Defaults 0, indication multiple imputation. Minimum optional string containing name variable Data holding minimal values imputation. RawImputed rawImputed object multiple imputations. Extra data.frame extra data add imputations. data used imputation model. must contain variables original data.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kInlaComparison-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kInlaComparison class — n2kInlaComparison-class","title":"The n2kInlaComparison class — n2kInlaComparison-class","text":"Compare multiple models using WAIC criterion","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kInlaComparison-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The n2kInlaComparison class — n2kInlaComparison-class","text":"WAIC data.frame WAIC values per model.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kManifest-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kManifest class — n2kManifest-class","title":"The n2kManifest class — n2kManifest-class","text":"n2kManifest class","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kModel class — n2kModel-class","title":"The n2kModel class — n2kModel-class","text":"virtual superclass contain analysis models","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kModelImputed-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kModelImputed class — n2kModelImputed-class","title":"The n2kModelImputed class — n2kModelImputed-class","text":"holds model aggregated imputed data","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kModelImputed-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The n2kModelImputed class — n2kModelImputed-class","text":"Function object pass model.fun argument multimput::model_impute(). Package vector package names must loaded run function. ModelArgs object pass model.args argument multimput::model_impute(). PrepareModelArgs optional list containing single function applied object. result function appended ModelsArgs. Extractor object pass extractor argument multimput::model_impute(). ExtractorArgs object pass extractor.args argument multimput::model_impute(). Filter object pass filter argument multimput::model_impute(). Mutate object pass mutate argument multimput::model_impute(). AggregatedImputed aggregatedImputed object multiple imputations. Results data.frame results multimput::model_impute().","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kParameter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kParameter class — n2kParameter-class","title":"The n2kParameter class — n2kParameter-class","text":"n2kParameter class","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kResult-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kResult class — n2kResult-class","title":"The n2kResult class — n2kResult-class","text":"n2kResult class","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kSpde-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The n2kSpde class — n2kSpde-class","title":"The n2kSpde class — n2kSpde-class","text":"hold analysis data based INLA model SPDE.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2kSpde-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The n2kSpde class — n2kSpde-class","text":"Spde list containing information SPDE.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an n2kAggregate object — n2k_aggregate","title":"Create an n2kAggregate object — n2k_aggregate","text":"new n2kAggregate model.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an n2kAggregate object — n2k_aggregate","text":"","code":"n2k_aggregate(...)  # S4 method for class 'ANY' n2k_aggregate(...)"},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an n2kAggregate object — n2k_aggregate","text":"... arguments. See ","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_aggregate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an n2kAggregate object — n2k_aggregate","text":"scheme_id: string holding id scheme. species_group_id: string identifying species group. location_group_id: string identifying location group. model_type: string identifying type model fit data. first_imported_year: Oldest year considered data. last_imported_year: recent year considered data. duration: width moving window. Defaults last_imported_year - first_imported_year + 1. last_analysed_year: recent year window. Defaults last_imported_year. analysis_date: POSIXct date indicating date dataset imported. seed: single integer used seed calculations. random seed inserted missing. fun: function apply aggregating. filter: optional list filter argument multimput::aggregate_impute(). join: optional list thejoin argument multimput::aggregate_impute().","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_composite.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an n2kComposite object — n2k_composite","title":"Create an n2kComposite object — n2k_composite","text":"new n2kComposite model created parent data.frame.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_composite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an n2kComposite object — n2k_composite","text":"","code":"n2k_composite(parent_status, ...)  # S4 method for class 'data.frame' n2k_composite(   parent_status,   status = \"waiting\",   result_datasource_id,   scheme_id,   formula,   species_group_id,   location_group_id,   model_type,   first_imported_year,   last_imported_year,   duration,   last_analysed_year,   analysis_date,   extractor,   ...,   seed )"},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_composite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an n2kComposite object — n2k_composite","text":"parent_status data.frame columns parent_analysis (file fingerprint parent), parentstatus_fingerprint (status fingerprint parent), parent_status (status parent). ... arguments status single character indicating status model. Defaults \"waiting\". result_datasource_id string identifying data source. scheme_id single integer holding id scheme. formula single character identifying comparison. species_group_id string identifying species group. location_group_id string identifying location group. model_type type models. Must start \"inla comparison:\". first_imported_year Oldest year considered data. last_imported_year recent year considered data. duration width moving window. Defaults last_imported_year - first_imported_year + 1. last_analysed_year recent year window. Defaults last_imported_year. analysis_date POSIXct date indicating date dataset imported. extractor function extract relevant parameters model seed single integer used seed calculations. random seed inserted missing.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_hurdle_imputed.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an n2kHurdleImputed object — n2k_hurdle_imputed","title":"Create an n2kHurdleImputed object — n2k_hurdle_imputed","text":"new n2kHurdleImputed model.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_hurdle_imputed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an n2kHurdleImputed object — n2k_hurdle_imputed","text":"","code":"n2k_hurdle_imputed(presence, count, verbose = FALSE)  # S4 method for class 'n2kInla' n2k_hurdle_imputed(presence, count, verbose = FALSE)"},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_hurdle_imputed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an n2kHurdleImputed object — n2k_hurdle_imputed","text":"presence n2kInla object presence model. count n2kInla object count model. verbose display location group ID species group ID. Defaults FALSE.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an n2kImport object — n2k_import","title":"Create an n2kImport object — n2k_import","text":"new n2kImport model.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an n2kImport object — n2k_import","text":"","code":"n2k_import(...)  # S4 method for class 'ANY' n2k_import(...)"},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an n2kImport object — n2k_import","text":"... arguments. See ","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_import.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an n2kImport object — n2k_import","text":"scheme_id: string holding id scheme. species_group_id: string identifying species group. location_group_id: string identifying location group. model_type: string identifying type model fit data. first_imported_year: Oldest year considered data. last_imported_year: recent year considered data. duration: width moving window. Defaults last_imported_year - first_imported_year + 1. last_analysed_year: recent year window. Defaults last_imported_year. analysis_date: POSIXct date indicating date dataset imported. seed: single integer used seed calculations. random seed inserted missing. formula: string holding model formula. dataset: data.frame filename, fingerprint import_date.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an n2kInla object — n2k_inla","title":"Create an n2kInla object — n2k_inla","text":"new n2kInla model created data data.frame. case data n2kInla object, model status updated. slots unaffected.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an n2kInla object — n2k_inla","text":"","code":"n2k_inla(data, ..., model_fit)  # S4 method for class 'data.frame,ANY' n2k_inla(   data,   status = \"new\",   result_datasource_id,   scheme_id,   family = \"poisson\",   formula,   species_group_id,   location_group_id,   model_type,   first_imported_year,   last_imported_year,   duration,   last_analysed_year,   analysis_date,   lin_comb = NULL,   minimum = \"\",   imputation_size,   parent = character(0),   seed,   replicate_name = list(),   control = list(),   parent_status = \"converged\",   parent_statusfingerprint,   extra,   ...,   model_fit )  # S4 method for class 'n2kInla,inla' n2k_inla(data, status, raw_imputed = NULL, ..., model_fit)"},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an n2kInla object — n2k_inla","text":"data data.frame data analyse ... arguments. See model_fit fitted model status single character indicating status model. Defaults \"waiting\". result_datasource_id string identifying data source. scheme_id single integer holding id scheme. family family use INLA model. formula single character identifying comparison. species_group_id string identifying species group. location_group_id string identifying location group. model_type type models. Must start \"inla comparison:\". first_imported_year Oldest year considered data. last_imported_year recent year considered data. duration width moving window. Defaults last_imported_year - first_imported_year + 1. last_analysed_year recent year window. Defaults last_imported_year. analysis_date POSIXct date indicating date dataset imported. lin_comb model matrix calculate linear combinations. minimum name variable holds minimum counts. relevant case multiple imputation. imputation_size required number imputations defaults 0. parent file fingerprint optional parent analysis. seed single integer used seed calculations. random seed inserted missing. replicate_name list names replicates. Defaults empty list. Used case f(X, ..., replicate = Z). named list like e.g. list(X = c(\"\", \"b\", \"c\")). control named list passed INLA::inla() fitting model. parent_status status parent analysis. parent_statusfingerprint status fingerprint parent analysis. extra data.frame extra observations used model. added subsequent analyses. raw_imputed optional rawImputed object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_inla_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an n2kInlaComparison object — n2k_inla_comparison","title":"Create an n2kInlaComparison object — n2k_inla_comparison","text":"new n2kInlaComparison model created parent character.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_inla_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an n2kInlaComparison object — n2k_inla_comparison","text":"","code":"n2k_inla_comparison(parent_status, ...)  # S4 method for class 'data.frame' n2k_inla_comparison(   parent_status,   status = \"waiting\",   result_datasource_id,   scheme_id,   formula,   species_group_id,   location_group_id,   model_type,   first_imported_year,   last_imported_year,   duration,   last_analysed_year,   analysis_date,   ...,   seed )"},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_inla_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an n2kInlaComparison object — n2k_inla_comparison","text":"parent_status data.frame columns parent_analysis (file fingerprint parent), parentstatus_fingerprint (status fingerprint parent), parent_status (status parent). ... arguments status single character indicating status model. Defaults \"waiting\". result_datasource_id string identifying data source. scheme_id single integer holding id scheme. formula single character identifying comparison. species_group_id string identifying species group. location_group_id string identifying location group. model_type type models. Must start \"inla comparison:\". first_imported_year Oldest year considered data. last_imported_year recent year considered data. duration width moving window. Defaults last_imported_year - first_imported_year + 1. last_analysed_year recent year window. Defaults last_imported_year. analysis_date POSIXct date indicating date dataset imported. seed single integer used seed calculations. random seed inserted missing.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_manifest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an n2kManifest object — n2k_manifest","title":"Create an n2kManifest object — n2k_manifest","text":"new n2kManifest object created manifest data.frame.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_manifest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an n2kManifest object — n2k_manifest","text":"","code":"n2k_manifest(manifest)  # S4 method for class 'data.frame' n2k_manifest(manifest)"},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_manifest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an n2kManifest object — n2k_manifest","text":"manifest data.frame manifest content","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_model_imputed.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an n2kModelImputed object — n2k_model_imputed","title":"Create an n2kModelImputed object — n2k_model_imputed","text":"new n2kModelImputed model.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_model_imputed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an n2kModelImputed object — n2k_model_imputed","text":"","code":"n2k_model_imputed(...)  # S4 method for class 'ANY' n2k_model_imputed(...)"},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_model_imputed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an n2kModelImputed object — n2k_model_imputed","text":"... arguments. See ","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_model_imputed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an n2kModelImputed object — n2k_model_imputed","text":"scheme_id: string holding id scheme. species_group_id: string identifying species group. location_group_id: string identifying location group. model_type: string identifying type model fit data. first_imported_year: Oldest year considered data. last_imported_year: recent year considered data. duration: width moving window. Defaults last_imported_year - first_imported_year + 1. last_analysed_year: recent year window. Defaults last_imported_year. analysis_date: POSIXct date indicating date dataset imported. seed: single integer used seed calculations. random seed inserted missing. model_fun: model_fun argument multimput::model_impute(). package: character vector package names must loaded model_fun. model_args: optional list model_args argument multimput::model_impute(). extractor: optional list extractor argument multimput::model_impute(). extractor_args: optional list extractor_args argument multimput::model_impute(). filter: optional list filter argument multimput::model_impute(). mutate: optional list `mutate“ argument multimput::model_impute().","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_spde.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an n2kSpde object — n2k_spde","title":"Create an n2kSpde object — n2k_spde","text":"new n2kSpde model created data data.frame. case data n2kSpde object, model status updated. slots unaffected.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_spde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an n2kSpde object — n2k_spde","text":"","code":"n2k_spde(data, ..., model_fit)  # S4 method for class 'data.frame,ANY' n2k_spde(   data,   status = \"new\",   result_datasource_id,   scheme_id,   family = \"poisson\",   formula,   species_group_id,   location_group_id,   model_type,   spde,   first_imported_year,   last_imported_year,   duration,   last_analysed_year,   analysis_date,   lin_comb = NULL,   minimum = \"\",   imputation_size,   parent = character(0),   seed,   replicate_name = list(),   control = list(),   parent_status = \"converged\",   parent_statusfingerprint,   extra,   ...,   model_fit )  # S4 method for class 'n2kSpde,inla' n2k_spde(data, status, raw_imputed = NULL, ..., model_fit)"},{"path":"https://inbo.github.io/n2kanalysis/reference/n2k_spde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an n2kSpde object — n2k_spde","text":"data data.frame data analyse ... arguments. See model_fit fitted model status single character indicating status model. Defaults \"waiting\". result_datasource_id string identifying data source. scheme_id single integer holding id scheme. family family use INLA model. formula single character identifying comparison. species_group_id string identifying species group. location_group_id string identifying location group. model_type type models. Must start \"inla comparison:\". spde Spde object. See [spde]. first_imported_year Oldest year considered data. last_imported_year recent year considered data. duration width moving window. Defaults last_imported_year - first_imported_year + 1. last_analysed_year recent year window. Defaults last_imported_year. analysis_date POSIXct date indicating date dataset imported. lin_comb model matrix calculate linear combinations. minimum name variable holds minimum counts. relevant case multiple imputation. imputation_size required number imputations defaults 0. parent file fingerprint optional parent analysis. seed single integer used seed calculations. random seed inserted missing. replicate_name list names replicates. Defaults empty list. Used case f(X, ..., replicate = Z). named list like e.g. list(X = c(\"\", \"b\", \"c\")). control named list passed INLA::inla() fitting model. parent_status data.frame columns parent_analysis (file fingerprint parent), parentstatus_fingerprint (status fingerprint parent), parent_status (status parent). parent_statusfingerprint status fingerprint parent analysis. extra data.frame extra observations used model. added subsequent analyses. raw_imputed optional rawImputed object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/order_manifest.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a manifest in vector of analysis fingerprints — order_manifest","title":"Convert a manifest in vector of analysis fingerprints — order_manifest","text":"order analysis determined parent-child relationship. starts analyses without parents. adds analyses parents already added. process repeated analyses added.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/order_manifest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a manifest in vector of analysis fingerprints — order_manifest","text":"","code":"order_manifest(manifest)"},{"path":"https://inbo.github.io/n2kanalysis/reference/order_manifest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a manifest in vector of analysis fingerprints — order_manifest","text":"manifest n2kManifest","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/parent_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the parent status of an n2kModel — parent_status","title":"Get the parent status of an n2kModel — parent_status","text":"Get parent status n2kModel","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/parent_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the parent status of an n2kModel — parent_status","text":"","code":"parent_status(x)  # S4 method for class 'n2kAnalysisMetadata' parent_status(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/parent_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the parent status of an n2kModel — parent_status","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/parent_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the parent status of an n2kModel — parent_status","text":"parent status object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/parent_status_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Overwrite the status of an n2kAnalysisMetadata — parent_status<-","title":"Overwrite the status of an n2kAnalysisMetadata — parent_status<-","text":"Overwrite status n2kAnalysisMetadata","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/parent_status_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite the status of an n2kAnalysisMetadata — parent_status<-","text":"","code":"parent_status(x) <- value  # S4 method for class 'n2kComposite' parent_status(x) <- value"},{"path":"https://inbo.github.io/n2kanalysis/reference/parent_status_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overwrite the status of an n2kAnalysisMetadata — parent_status<-","text":"x n2kAnalysisMetadata object value new values status","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/read_manifest.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a n2kManifest object — read_manifest","title":"Read a n2kManifest object — read_manifest","text":"Read n2kManifest object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/read_manifest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a n2kManifest object — read_manifest","text":"","code":"read_manifest(base, project, hash)  # S4 method for class 'character' read_manifest(base, project, hash)  # S4 method for class 's3_bucket' read_manifest(base, project, hash)"},{"path":"https://inbo.github.io/n2kanalysis/reference/read_manifest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a n2kManifest object — read_manifest","text":"base base location read manifest. project relative path within base location. hash Optional sha1 manifest. can abbreviated first unique characters. function return error case multiple matches. missing, recent manifest returned.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/read_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an n2kModel object — read_model","title":"Read an n2kModel object — read_model","text":"Read n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/read_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an n2kModel object — read_model","text":"","code":"read_model(x, base, project)  # S4 method for class 'ANY,character' read_model(x, base, project)  # S4 method for class 'ANY,s3_bucket' read_model(x, base, project)  # S4 method for class 'ANY,ANY' read_model(x, base, project)"},{"path":"https://inbo.github.io/n2kanalysis/reference/read_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an n2kModel object — read_model","text":"x file fingerprint n2kModel base base location read model project relative path within base location","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/read_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an n2kResult object — read_result","title":"Read an n2kResult object — read_result","text":"Read n2kResult object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/read_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an n2kResult object — read_result","text":"","code":"read_result(x, base, project)  # S4 method for class 'ANY,character' read_result(x, base, project)  # S4 method for class 'ANY,s3_bucket' read_result(x, base, project)  # S4 method for class 'ANY,ANY' read_result(x, base, project)"},{"path":"https://inbo.github.io/n2kanalysis/reference/read_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an n2kResult object — read_result","text":"x file fingerprint n2kResult base base location read results project relative path within base location","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. digest sha1","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/result_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate all results estimates in a single dataframe — result_estimate","title":"Aggregate all results estimates in a single dataframe — result_estimate","text":"Aggregate results estimates single dataframe","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/result_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate all results estimates in a single dataframe — result_estimate","text":"","code":"result_estimate(x, ...)  # S4 method for class 'character' result_estimate(x, ..., base, project)  # S4 method for class 'n2kResult' result_estimate(x, ...)"},{"path":"https://inbo.github.io/n2kanalysis/reference/result_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate all results estimates in a single dataframe — result_estimate","text":"x object current results ... arguments (see Details) base base location read results project relative path within base location","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/result_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate all results meta data in a single dataframe — result_metadata","title":"Aggregate all results meta data in a single dataframe — result_metadata","text":"Aggregate results meta data single dataframe","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/result_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate all results meta data in a single dataframe — result_metadata","text":"","code":"result_metadata(x, ...)  # S4 method for class 'character' result_metadata(x, ..., base, project)  # S4 method for class 'n2kResult' result_metadata(x, ...)"},{"path":"https://inbo.github.io/n2kanalysis/reference/result_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate all results meta data in a single dataframe — result_metadata","text":"x object current results ... arguments (see Details) base base location read results project relative path within base location","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/select_factor_count_strictly_positive.html","id":null,"dir":"Reference","previous_headings":"","what":"Select data based on the number of presences per category — select_factor_count_strictly_positive","title":"Select data based on the number of presences per category — select_factor_count_strictly_positive","text":"Presences Count > 0.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/select_factor_count_strictly_positive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select data based on the number of presences per category — select_factor_count_strictly_positive","text":"","code":"select_factor_count_strictly_positive(   observation,   variable,   threshold,   relative = FALSE,   dimension = 1 )"},{"path":"https://inbo.github.io/n2kanalysis/reference/select_factor_count_strictly_positive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select data based on the number of presences per category — select_factor_count_strictly_positive","text":"observation data.frame observations variable name factor threshold minimal threshold relative FALSE threshold number non-zero observations. TRUE threshold proportion non-zero observations. Defaults FALSE. dimension Indicates element variable used final aggregation.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/select_factor_count_strictly_positive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select data based on the number of presences per category — select_factor_count_strictly_positive","text":"","code":"observation <- data.frame(   Count = c(4, 4, 4, 4, 3, 3, 3, 0, 2, 2, 0, 0),   LocationID = rep(1:3, each = 4),   Year = rep(c(1, 1, 1, 1, 2, 2), 2) ) # Select the locations with at least 3 prescenses select_factor_count_strictly_positive(   observation,   variable = \"LocationID\",   threshold = 3 ) #>   Count LocationID Year #> 1     4          1    1 #> 2     4          1    1 #> 3     4          1    1 #> 4     4          1    1 #> 5     3          2    2 #> 6     3          2    2 #> 7     3          2    1 #> 8     0          2    1 # Select those locations in which the species is present in at least 2 years select_factor_count_strictly_positive(   observation, variable = c(\"LocationID\", \"Year\"), threshold = 2 ) #>   Count LocationID Year #> 5     3          2    2 #> 6     3          2    2 #> 7     3          2    1 #> 8     0          2    1 # Select those years in which the species is present in at least 2 locations select_factor_count_strictly_positive(   observation, variable = c(\"LocationID\", \"Year\"),   threshold = 2,   dimension = 2 ) #>    Count LocationID Year #> 1      4          1    1 #> 2      4          1    1 #> 3      4          1    1 #> 4      4          1    1 #> 7      3          2    1 #> 8      0          2    1 #> 9      2          3    1 #> 10     2          3    1"},{"path":"https://inbo.github.io/n2kanalysis/reference/select_factor_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Select the observations based on the average of a factor — select_factor_threshold","title":"Select the observations based on the average of a factor — select_factor_threshold","text":"negative binomial average Count variable calculated level variable. levels equal larger threshold times maximal average (original scale) retained.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/select_factor_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select the observations based on the average of a factor — select_factor_threshold","text":"","code":"select_factor_threshold(observation, variable, threshold)"},{"path":"https://inbo.github.io/n2kanalysis/reference/select_factor_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select the observations based on the average of a factor — select_factor_threshold","text":"observation data.frame observations variable name factor threshold minimal threshold","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/select_factor_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select the observations based on the average of a factor — select_factor_threshold","text":"","code":"observation <- data.frame(   Count = c(100, 101, 50, 51, 1, 0, 0, 0),   LocationID = factor(rep(1:4, each = 2)) ) select_factor_threshold(observation, \"LocationID\", threshold = 0.05) #> Warning: iteration limit reached #> Warning: iteration limit reached #>   Count LocationID #> 1   100          1 #> 2   101          1 #> 3    50          2 #> 4    51          2"},{"path":"https://inbo.github.io/n2kanalysis/reference/select_observed_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Limit the observation to the range in which the species is present — select_observed_range","title":"Limit the observation to the range in which the species is present — select_observed_range","text":"Limit observation range species present","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/select_observed_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limit the observation to the range in which the species is present — select_observed_range","text":"","code":"select_observed_range(observation, variable)"},{"path":"https://inbo.github.io/n2kanalysis/reference/select_observed_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limit the observation to the range in which the species is present — select_observed_range","text":"observation data.frame observations variable name factor","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/select_observed_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Limit the observation to the range in which the species is present — select_observed_range","text":"","code":"observation <- data.frame(   Count = c(0, 0, 100, 101, 0, 51, 1, 0, 0, 0),   Year = 1:10 ) select_observed_range(observation, \"Year\") #>   Count Year #> 3   100    3 #> 4   101    4 #> 5     0    5 #> 6    51    6 #> 7     1    7"},{"path":"https://inbo.github.io/n2kanalysis/reference/session_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a sessionInfo() to a data.frame of packages — session_package","title":"Convert a sessionInfo() to a data.frame of packages — session_package","text":"Convert sessionInfo() data.frame packages","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/session_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a sessionInfo() to a data.frame of packages — session_package","text":"","code":"session_package(session)  # S4 method for class 'sessionInfo' session_package(session)"},{"path":"https://inbo.github.io/n2kanalysis/reference/session_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a sessionInfo() to a data.frame of packages — session_package","text":"session output sessionInfo()","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/session_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a sessionInfo() to a data.frame of packages — session_package","text":"data.frame packages sessionInfo()","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/spde.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Spde object — spde","title":"Create an Spde object — spde","text":"Create Spde object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/spde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Spde object — spde","text":"","code":"spde(coordinates, range, sigma)"},{"path":"https://inbo.github.io/n2kanalysis/reference/spde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Spde object — spde","text":"coordinates data.frame coordinates use define mesh. range numeric vector length 2. used prior.range argument [INLA::inla.spde2.pcmatern]. sigma numeric vector length 2. used prior.sigma argument [INLA::inla.spde2.pcmatern].","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/spde2matern.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an Spde object to a matern object — spde2matern","title":"Convert an Spde object to a matern object — spde2matern","text":"Convert Spde object matern object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/spde2matern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an Spde object to a matern object — spde2matern","text":"","code":"spde2matern(object)"},{"path":"https://inbo.github.io/n2kanalysis/reference/spde2matern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an Spde object to a matern object — spde2matern","text":"object Spde object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/spde2mesh.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an Spde object to a mesh object — spde2matern,Spde-method","title":"Convert an Spde object to a mesh object — spde2matern,Spde-method","text":"Convert Spde object mesh object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/spde2mesh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an Spde object to a mesh object — spde2matern,Spde-method","text":"","code":"# S4 method for class 'Spde' spde2matern(object)  spde2mesh(object)  # S4 method for class 'Spde' spde2mesh(object)"},{"path":"https://inbo.github.io/n2kanalysis/reference/spde2mesh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an Spde object to a mesh object — spde2matern,Spde-method","text":"object Spde object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the status of an n2kModel — status","title":"Get the status of an n2kModel — status","text":"Get status n2kModel","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the status of an n2kModel — status","text":"","code":"status(x)  # S4 method for class 'n2kAnalysisMetadata' status(x)  # S4 method for class 'character' status(x)"},{"path":"https://inbo.github.io/n2kanalysis/reference/status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the status of an n2kModel — status","text":"x n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the status of an n2kModel — status","text":"status object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/status_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Overwrite the status of an n2kAnalysisMetadata — status<-","title":"Overwrite the status of an n2kAnalysisMetadata — status<-","text":"Overwrite status n2kAnalysisMetadata","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/status_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite the status of an n2kAnalysisMetadata — status<-","text":"","code":"status(x) <- value  # S4 method for class 'n2kInla' status(x) <- value  # S4 method for class 'n2kComposite' status(x) <- value  # S4 method for class 'n2kInlaComparison' status(x) <- value  # S4 method for class 'n2kAggregate' status(x) <- value  # S4 method for class 'n2kModelImputed' status(x) <- value  # S4 method for class 'n2kHurdleImputed' status(x) <- value"},{"path":"https://inbo.github.io/n2kanalysis/reference/status_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overwrite the status of an n2kAnalysisMetadata — status<-","text":"x n2kAnalysisMetadata object value new values status","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/store_manifest.html","id":null,"dir":"Reference","previous_headings":"","what":"Store an n2kManifest object — store_manifest","title":"Store an n2kManifest object — store_manifest","text":"Store n2kManifest object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/store_manifest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store an n2kManifest object — store_manifest","text":"","code":"store_manifest(x, base, project)  # S4 method for class 'ANY,character' store_manifest(x, base, project)  # S4 method for class 'ANY,s3_bucket' store_manifest(x, base, project)"},{"path":"https://inbo.github.io/n2kanalysis/reference/store_manifest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store an n2kManifest object — store_manifest","text":"x n2kManifest base base location store manifest project relative path within base location","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/store_manifest_yaml.html","id":null,"dir":"Reference","previous_headings":"","what":"Store a Docker configuration — store_manifest_yaml","title":"Store a Docker configuration — store_manifest_yaml","text":"Store Docker configuration","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/store_manifest_yaml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store a Docker configuration — store_manifest_yaml","text":"","code":"store_manifest_yaml(x, base, project, docker, dependencies)  # S4 method for class 'ANY,s3_bucket' store_manifest_yaml(x, base, project, docker, dependencies)  # S4 method for class 'ANY,character' store_manifest_yaml(x, base, project, docker, dependencies)"},{"path":"https://inbo.github.io/n2kanalysis/reference/store_manifest_yaml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store a Docker configuration — store_manifest_yaml","text":"x n2kManifest base base location store manifest project relative path within base location docker docker image use dependencies extra GitHub packages install","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/store_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Store an n2kModel object — store_model","title":"Store an n2kModel object — store_model","text":"Store n2kModel object","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/store_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store an n2kModel object — store_model","text":"","code":"store_model(x, base, project, overwrite = TRUE, validate = TRUE)  # S4 method for class 'ANY,character' store_model(x, base, project, overwrite = TRUE, validate = TRUE)  # S4 method for class 'ANY,s3_bucket' store_model(x, base, project, overwrite = TRUE, validate = TRUE)"},{"path":"https://inbo.github.io/n2kanalysis/reference/store_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store an n2kModel object — store_model","text":"x n2kModel. base base location store model. project relative path within base location. overwrite existing object overwritten? Defaults TRUE. validate Check object valid storing . Defaults TRUE.","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/union.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a union of AnalysisVersions — union","title":"Make a union of AnalysisVersions — union","text":"Make union AnalysisVersions","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/union.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a union of AnalysisVersions — union","text":"","code":"union(...)"},{"path":"https://inbo.github.io/n2kanalysis/reference/union.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a union of AnalysisVersions — union","text":"... n2kAnalysisVersions union","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/validObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the validity of objects in files — validObject,character-method","title":"Get the validity of objects in files — validObject,character-method","text":"Get validity objects files","code":""},{"path":"https://inbo.github.io/n2kanalysis/reference/validObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the validity of objects in files — validObject,character-method","text":"","code":"# S4 method for class 'character' validObject(object, test = FALSE, complete = FALSE)"},{"path":"https://inbo.github.io/n2kanalysis/reference/validObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the validity of objects in files — validObject,character-method","text":"object single filename, single path vector filenames. test See methods::validObject() complete See methods::validObject()","code":""},{"path":"https://inbo.github.io/n2kanalysis/news/index.html","id":"n2kanalysis-040","dir":"Changelog","previous_headings":"","what":"n2kanalysis 0.4.0","title":"n2kanalysis 0.4.0","text":"Handle INLA models SPDE element.","code":""},{"path":"https://inbo.github.io/n2kanalysis/news/index.html","id":"n2kanalysis-032","dir":"Changelog","previous_headings":"","what":"n2kanalysis 0.3.2","title":"n2kanalysis 0.3.2","text":"Make fit_model() efficient.","code":""},{"path":"https://inbo.github.io/n2kanalysis/news/index.html","id":"n2kanalysis-031","dir":"Changelog","previous_headings":"","what":"n2kanalysis 0.3.1","title":"n2kanalysis 0.3.1","text":"Add n2kHurdleImputed class n2k_hurdle_imputed() fit hurdle models imputation. Add Manifest_yaml_to_bash() convert manifest file bash script. Update checklist infrastructure.","code":""},{"path":[]},{"path":"https://inbo.github.io/n2kanalysis/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"n2kanalysis 0.3.0","text":"Add checklist infrastructure. required renaming function names arguments order comply style guide.","code":""},{"path":"https://inbo.github.io/n2kanalysis/news/index.html","id":"other-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"n2kanalysis 0.3.0","text":"Suggest INLA instead importing make n2kanalysis build R-universe. Added NEWS.md file track changes package.","code":""}]
